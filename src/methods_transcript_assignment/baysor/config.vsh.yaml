__merge__: /src/api/comp_method_transcript_assignment.yaml

name: baysor
label: "Baysor Transcript Assignment"
summary: "Assign transcripts to cells using the Baysor method"
description: "Baysor is a tool for performing cell segmentation on imaging-based spatial transcriptomics data. It optimizes segmentation considering the likelihood of transcriptional composition, size and shape of the cell."
links:
  documentation: "https://kharchenkolab.github.io/Baysor/dev/"
  repository: "https://github.com/kharchenkolab/Baysor"
references:
  doi: "10.1038/s41587-021-01044-w"

arguments:
  - name: --transcripts_key
    type: string
    description: The key of the transcripts within the points of the spatial data
    default: transcripts
  - name: --coordinate_system
    type: string
    description: The key of the pixel space coordinate system within the spatial data
    default: global

  - name: --force_2d
    type: string
    required: false
    description: "Ignores z-column in the data if it is provided"
    direction: input 
    default: "false"

  - name: --min_molecules_per_cell
    type: integer
    required: false
    description: "Minimal number of molecules per cell"
    direction: input 
    default: 50
  
  - name: --scale
    type: double
    required: false
    description: |
      "Scale parameter, which suggest approximate cell radius for the algorithm. Must be in the same units as 
      x and y molecule coordinates. Negative values mean it must be estimated from `min_molecules_per_cell`."
    direction: input 
    default: -1.0

  - name: --scale_std
    type: string
    required: false
    description: "Standard deviation of scale across cells relative to `scale`"
    direction: input 
    default: "25%"

  - name: --n_clusters
    type: integer
    required: false
    description: "Number of molecule clusters, i.e. major cell types."
    direction: input 
    default: 4

  - name: --prior_segmentation_confidence
    type: double
    required: false
    description: "Confidence of the prior segmentation"
    direction: input 
    default: 0.8

resources:
  - type: python_script
    path: script.py

engines:
  #NOTE: The docker container must be build with the correct platform. On mac viash test won't work. Rebuild the container
  #      with the correct platform separately with the following command:
  #      docker run -it --rm --platform linux/x86_64 python:3.11.13-bookworm /bin/bash
  #      ... and then the commands to build the next layers.
  #      (commands can be retrieved from `viash run src/methods_transcript_assignment/baysor/config.vsh.yaml -- ---dockerfile`)
  - type: docker
    image: python:3.11.13-bookworm
    setup:
      - type: apt
        packages: procps
      - type: python
        github:
          - openproblems-bio/core#subdirectory=packages/python/openproblems
      - type: python
        packages:
           - spatialdata
           - anndata<0.12.0 #TODO: Remove this line when https://github.com/gustaveroussy/sopa/issues/305 is resolved
           - sopa[baysor]
      - type: docker
        run:
          - wget https://github.com/kharchenkolab/Baysor/releases/download/v0.7.1/baysor-x86_x64-linux-v0.7.1_build.zip
          - unzip baysor-x86_x64-linux-v0.7.1_build.zip
          - chmod +x /bin/baysor
          - ln -sf /bin/baysor/bin/baysor /usr/local/bin/baysor
  #- type: docker
  #  image: openproblems/base_python:1
  #  __merge__: 
  #    - /src/base/setup_spatialdata_partial.yaml
  #  setup:
  #    - type: docker
  #      run:
  #        - wget https://github.com/kharchenkolab/Baysor/releases/download/v0.7.1/baysor-x86_x64-linux-v0.7.1_build.zip
  #        - unzip baysor-x86_x64-linux-v0.7.1_build.zip
  #        - chmod +x /bin/baysor
  #        - ln -sf /bin/baysor/bin/baysor /usr/local/bin/baysor
  #        #- execstack -c /bin/baysor/bin/../lib/julia/libopenlibm.so
  #        #Since the update of the base image we run into an issue that could be solved with execstack, however this package not 
  #        #available for the given os version.
  - type: native

runners:
  - type: executable
  - type: nextflow
    directives:
      label: [ veryhightime, highcpu, highmem ]
