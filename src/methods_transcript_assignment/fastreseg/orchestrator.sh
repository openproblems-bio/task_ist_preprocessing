#!/bin/bash

## VIASH START
# The following code has been auto-generated by Viash.
par_input_ist='resources_test/task_ist_preprocessing/mouse_brain_combined/raw_ist.zarr'
par_input_segmentation='resources_test/task_ist_preprocessing/mouse_brain_combined/segmentation.zarr'
par_input_scrnaseq='resources_test/task_ist_preprocessing/mouse_brain_combined/scrnaseq_reference.h5ad'
par_sc_cell_type_key='cell_type'
par_output='resources_test/task_ist_preprocessing/mouse_brain_combined/transcript_assignments.zarr'
par_transcripts_key='transcripts'
par_coordinate_system='global'
meta_name='fastreseg'
meta_functionality_name='fastreseg'
meta_resources_dir='/private/tmp/viash_inject_fastreseg314756503172152491'
meta_executable='/private/tmp/viash_inject_fastreseg314756503172152491/fastreseg'
meta_config='/private/tmp/viash_inject_fastreseg314756503172152491/.config.vsh.yaml'
meta_temp_dir='/var/folders/fq/ymt0vml175s4yvqxzbmlmpz80000gn/T/'
meta_cpus='123'
meta_memory_b='123'
meta_memory_kb='123'
meta_memory_mb='123'
meta_memory_gb='123'
meta_memory_tb='123'
meta_memory_pb='123'
meta_memory_kib='123'
meta_memory_mib='123'
meta_memory_gib='123'
meta_memory_tib='123'
meta_memory_pib='123'

## VIASH END

par_intermediate_dir=$(mktemp -d -p "$(pwd)" tmp-processing-XXXXXXXX)
# Access the YAML file
CONDA_ENV_FILE="$meta_resources_dir/environment.yml"
echo $CONDA_ENV_FILE
echo "running FastReseg orchestrator"

# Create intermediate directory
mkdir -p "$par_intermediate_dir"
echo $(date +%T)

# Step 1: Run Python script to reformat input in the first Python environment
python "input.py" \
  "$par_input_ist" \
  "$par_input_segmentation" \
  "$par_input_scrnaseq" \
  "$par_intermediate_dir/counts.tsv" \
  "$par_intermediate_dir/transcripts.tsv" \
  "$par_intermediate_dir/cell_types.tsv"

head $par_intermediate_dir/cell_types.tsv

# Step 2: RunFastReseg
## making conda environment with r-base and fastReseg
export CONDA_DIR=/opt/conda
wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda
# Put conda in path so we can use conda activate
export PATH=$CONDA_DIR/bin:$PATH

# Create and activate the second Python environment
# Initialize conda for bash
eval "$(/opt/conda/bin/conda shell.bash hook)"
conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main
conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r
conda env create -f $CONDA_ENV_FILE

conda activate fastreseg
conda install conda-forge::r-concaveman conda-forge::r-data.table conda-forge::r-ggplot2 conda-forge::r-devtools conda-forge::r-terra
conda install conda-forge::r-codetools conda-forge::r-matrix conda-forge::r-dbscan install conda-forge::r-igraph  conda-forge::r-matrixstats

##running the R script
Rscript script.R "$par_intermediate_dir/counts.tsv" \
  "$par_intermediate_dir/transcripts.tsv" \
  "$par_intermediate_dir/cell_types.tsv" \
  "$par_intermediate_dir/cell_ids.csv" \
  "$par_intermediate_dir/gene_names.csv" \
  "$par_intermediate_dir/transcripts_out.csv"

## python output
/usr/local/bin/python "output.py" \
  "$par_intermediate_dir/cell_ids.csv" \
  "$par_intermediate_dir/gene_names.csv" \
  "$par_intermediate_dir/transcripts_out.csv" \
  "$par_output"

echo $(date +%T)
#cd ../
# Step 3: Run output reformatting in thePython environmen
#/usr/local/bin/python "output.py" \t
#"$par_input" "SCS/results/spot2cell_0:0:0:0.txt" "$par_output"
